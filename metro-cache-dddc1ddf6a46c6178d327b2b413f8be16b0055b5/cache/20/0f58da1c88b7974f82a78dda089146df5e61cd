__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/cyuket/Documents/works/native work/calculator/App.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    App: {
      displayName: "App"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/cyuket/Documents/works/native work/calculator/App.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var App = _wrapComponent("App")(function (_React$Component) {
    _inherits(App, _React$Component);

    function App() {
      _classCallCheck(this, App);

      var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));

      _this.state = {
        resultText: "",
        calculationText: ""
      };
      _this.operations = ["DEL", "/", "*", "-", "+"];
      return _this;
    }

    _createClass(App, [{
      key: "operate",
      value: function operate(operation) {
        switch (operation) {
          case "DEL":
            var text = this.state.resultText.split('');
            text.pop();
            text.join('');
            this.setState({
              resultText: text.join('')
            });
            break;

          case '+':
          case '-':
          case '*':
          case '/':
            var lastChar = this.state.resultText.split('').pop();
            if (this.operations.indexOf(lastChar) > 0) return;
            if (this.state.text == "") return;
            this.setState({
              resultText: this.state.resultText + operation
            });
        }
      }
    }, {
      key: "clear",
      value: function clear(operation) {
        switch (operation) {
          case "DEL":
            this.setState({
              resultText: "",
              calculationText: ""
            });
        }
      }
    }, {
      key: "calculaeResult",
      value: function calculaeResult() {
        var text = this.state.resultText;
        var ans = eval(text);
        var value = ans.toString();
        this.setState({
          resultText: value,
          calculationText: ""
        });
      }
    }, {
      key: "validate",
      value: function validate() {
        var text = this.state.resultText;

        switch (text.slice(-1)) {
          case '+':
          case '*':
          case '/':
            return false;
        }

        return true;
      }
    }, {
      key: "buttonPressed",
      value: function buttonPressed(text) {
        if (text == '=') {
          return this.validate() && this.calculaeResult(this.state.resultText);
        }

        var value = this.state.resultText + text;
        this.setState({
          resultText: value,
          calculationText: eval(value)
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var rows = [];
        var num = [[9, 8, 7], [6, 5, 4], [3, 2, 1], [".", 0, "="]];

        var _loop = function _loop(i) {
          var cy = [];

          var _loop3 = function _loop3(j) {
            cy.push(_react3.default.createElement(
              _reactNative.TouchableOpacity,
              {
                key: num[i][j],
                onPress: function onPress() {
                  return _this2.buttonPressed(num[i][j]);
                },
                style: styles.btn,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 84
                }
              },
              _react3.default.createElement(
                _reactNative.Text,
                {
                  style: styles.btnText,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 85
                  }
                },
                num[i][j]
              )
            ));
          };

          for (var j = 0; j < 3; j++) {
            _loop3(j);
          }

          rows.push(_react3.default.createElement(
            _reactNative.View,
            {
              key: num[i],
              style: styles.row,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 91
              }
            },
            cy
          ));
        };

        for (var i = 0; i < 4; i++) {
          _loop(i);
        }

        var opps = [];

        var _loop2 = function _loop2(j) {
          opps.push(_react3.default.createElement(
            _reactNative.TouchableOpacity,
            {
              key: _this2.operations[j],
              onPress: function onPress() {
                return _this2.operate(_this2.operations[j]);
              },
              onLongPress: function onLongPress() {
                return _this2.clear(_this2.operations[j]);
              },
              style: styles.btn,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 97
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: styles.btnText,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 98
                }
              },
              _this2.operations[j]
            )
          ));
        };

        for (var j = 0; j < 5; j++) {
          _loop2(j);
        }

        return _react3.default.createElement(
          _reactNative.View,
          {
            style: styles.container,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 105
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.result,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 106
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: styles.resultText,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 107
                }
              },
              this.state.resultText
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.calculation,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 109
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: styles.calculationText,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 110
                }
              },
              this.state.calculationText,
              " "
            )
          ),
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.buttons,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 112
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              {
                style: styles.number,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 113
                }
              },
              rows
            ),
            _react3.default.createElement(
              _reactNative.View,
              {
                style: styles.operations,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 117
                }
              },
              opps
            )
          )
        );
      }
    }]);

    return App;
  }(_react3.default.Component));

  exports.default = App;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    result: {
      flex: 3,
      backgroundColor: "white",
      justifyContent: "center",
      alignItems: "flex-end"
    },
    calculation: {
      flex: 1,
      backgroundColor: "white",
      justifyContent: "center",
      alignItems: "flex-end"
    },
    buttons: {
      flex: 7,
      flexDirection: "row"
    },
    number: {
      flex: 3,
      backgroundColor: "#434343"
    },
    operations: {
      flex: 1,
      backgroundColor: "black"
    },
    row: {
      flexDirection: "row",
      flex: 1,
      justifyContent: "space-around",
      alignItems: "center"
    },
    operations: {
      flex: 1,
      justifyContent: "space-around",
      backgroundColor: "#636363"
    },
    calculationText: {
      fontSize: 30,
      color: "black"
    },
    resultText: {
      fontSize: 40,
      color: "black"
    },
    btn: {
      flex: 1,
      alignItems: "center",
      alignSelf: "stretch",
      justifyContent: "center"
    },
    btnText: {
      fontSize: 25,
      color: "white"
    }
  });
});